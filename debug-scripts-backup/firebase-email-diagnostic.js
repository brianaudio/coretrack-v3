/**
 * Firebase Email Diagnostic Tool
 * 
 * This tool helps diagnose and test password reset email functionality
 */

import { sendPasswordResetEmail } from 'firebase/auth';
import { auth } from '../src/lib/firebase';

console.log('üîç Firebase Email Diagnostic Tool\n');

// Test email sending functionality
const testPasswordResetEmail = async (email: string) => {
  try {
    console.log(`üìß Testing password reset email for: ${email}`);
    await sendPasswordResetEmail(auth, email);
    console.log('‚úÖ Password reset email sent successfully!');
    console.log('üìÆ Check the following locations:');
    console.log('   ‚Ä¢ Inbox');
    console.log('   ‚Ä¢ Spam/Junk folder');
    console.log('   ‚Ä¢ Promotions tab (Gmail)');
    console.log('   ‚Ä¢ Social/Updates tabs (Gmail)');
    return true;
  } catch (error: any) {
    console.error('‚ùå Failed to send password reset email:', error.message);
    console.log('\nüîß Possible issues:');
    console.log('   ‚Ä¢ Email address not registered in Firebase Auth');
    console.log('   ‚Ä¢ Firebase project email sending not configured');
    console.log('   ‚Ä¢ Email provider blocking Firebase emails');
    console.log('   ‚Ä¢ Daily email quota exceeded');
    return false;
  }
};

// Common email issues and solutions
console.log('üö® Common Email Issues & Solutions:');
console.log('=' .repeat(50));

console.log('\n1Ô∏è‚É£ Email Template Configuration:');
console.log('   ‚Ä¢ Go to Firebase Console ‚Üí Authentication ‚Üí Templates');
console.log('   ‚Ä¢ Check "Password reset" template is enabled and configured');
console.log('   ‚Ä¢ Verify sender name and email address');

console.log('\n2Ô∏è‚É£ Domain Configuration:');
console.log('   ‚Ä¢ Firebase project: inventory-system-latest');
console.log('   ‚Ä¢ Auth domain: inventory-system-latest.firebaseapp.com');
console.log('   ‚Ä¢ Make sure domain is verified');

console.log('\n3Ô∏è‚É£ Email Provider Issues:');
console.log('   ‚Ä¢ Gmail: Check spam, promotions, social tabs');
console.log('   ‚Ä¢ Yahoo: Check spam folder');
console.log('   ‚Ä¢ Outlook: Check junk email folder');
console.log('   ‚Ä¢ Corporate email: Contact IT about Firebase email filtering');

console.log('\n4Ô∏è‚É£ Firebase Console Checks:');
console.log('   ‚Ä¢ Go to: https://console.firebase.google.com/');
console.log('   ‚Ä¢ Select project: inventory-system-latest');
console.log('   ‚Ä¢ Navigate to: Authentication ‚Üí Templates');
console.log('   ‚Ä¢ Verify password reset template is configured');

console.log('\n5Ô∏è‚É£ Testing Steps:');
console.log('   ‚Ä¢ Try sending reset email to different email providers');
console.log('   ‚Ä¢ Check if user exists in Firebase Auth users list');
console.log('   ‚Ä¢ Verify Firebase project email quota');

// Email testing function for different providers
const testDifferentProviders = async () => {
  console.log('\nüß™ Email Provider Testing:');
  console.log('Test with these email types to identify provider-specific issues:');
  console.log('   ‚Ä¢ Gmail: test@gmail.com');
  console.log('   ‚Ä¢ Yahoo: test@yahoo.com');
  console.log('   ‚Ä¢ Outlook: test@outlook.com');
  console.log('   ‚Ä¢ iCloud: test@icloud.com');
  console.log('   ‚Ä¢ Custom domain: test@yourdomain.com');
};

// Troubleshooting checklist
console.log('\n‚úÖ Troubleshooting Checklist:');
console.log('‚ñ° User exists in Firebase Authentication users list');
console.log('‚ñ° Email template is configured in Firebase Console');
console.log('‚ñ° Checked all email folders (inbox, spam, promotions)');
console.log('‚ñ° Tested with different email providers');
console.log('‚ñ° Verified Firebase project is active and not suspended');
console.log('‚ñ° Checked Firebase project quotas and billing');
console.log('‚ñ° Confirmed no email filtering rules blocking Firebase');

// Manual test function
console.log('\nüîß Manual Testing:');
console.log('To manually test email sending:');
console.log('1. Go to Firebase Console ‚Üí Authentication ‚Üí Users');
console.log('2. Find the user you want to test');
console.log('3. Click the user and select "Send password reset email"');
console.log('4. Check if email arrives');

console.log('\nüì± Development Testing:');
console.log('For development, you can also:');
console.log('1. Use Firebase Auth Emulator for testing');
console.log('2. Check browser developer tools for auth errors');
console.log('3. Monitor Firebase Functions logs if using custom functions');

// Email verification status check
console.log('\nüîê Email Verification:');
console.log('Check if the issue is specific to password reset or all emails:');
console.log('‚Ä¢ Try sending email verification (for new signups)');
console.log('‚Ä¢ Test with Firebase Auth emulator');
console.log('‚Ä¢ Check Firebase project status and billing');

testDifferentProviders();

// Export the test function for use in other files
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { testPasswordResetEmail };
}
